{"id":"../node_modules/mathjs/src/function/matrix/ctranspose.js","dependencies":[{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/package.json","includedInParent":true,"mtime":1560273194535},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/src/.babelrc","includedInParent":true,"mtime":1559848325497},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/package.json","includedInParent":true,"mtime":1560201061975},{"name":"../../utils/factory","loc":{"line":1,"column":24},"parent":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/src/function/matrix/ctranspose.js","resolved":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/src/utils/factory.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCtranspose = void 0;\n\nvar _factory = require(\"../../utils/factory\");\n\nconst name = 'ctranspose';\nconst dependencies = ['typed', 'transpose', 'conj'];\nconst createCtranspose =\n/* #__PURE__ */\n(0, _factory.factory)(name, dependencies, ({\n  typed,\n  transpose,\n  conj\n}) => {\n  /**\n   * Transpose and complex conjugate a matrix. All values of the matrix are\n   * reflected over its main diagonal and then the complex conjugate is\n   * taken. This is equivalent to complex conjugation for scalars and\n   * vectors.\n   *\n   * Syntax:\n   *\n   *     math.ctranspose(x)\n   *\n   * Examples:\n   *\n   *     const A = [[1, 2, 3], [4, 5, math.complex(6,7)]]\n   *     math.ctranspose(A)               // returns [[1, 4], [2, 5], [3, {re:6,im:7}]]\n   *\n   * See also:\n   *\n   *     transpose, diag, inv, subset, squeeze\n   *\n   * @param {Array | Matrix} x  Matrix to be ctransposed\n   * @return {Array | Matrix}   The ctransposed matrix\n   */\n  return typed(name, {\n    'any': function (x) {\n      return conj(transpose(x));\n    }\n  });\n});\nexports.createCtranspose = createCtranspose;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":3,"column":0}},{"name":"name","generated":{"line":10,"column":6},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":3,"column":6}},{"generated":{"line":10,"column":10},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":3,"column":10}},{"generated":{"line":10,"column":13},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":3,"column":13}},{"generated":{"line":10,"column":25},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":4,"column":0}},{"name":"dependencies","generated":{"line":11,"column":6},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":4,"column":6}},{"generated":{"line":11,"column":18},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":4,"column":18}},{"generated":{"line":11,"column":21},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":22},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":4,"column":22}},{"generated":{"line":11,"column":29},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":31},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":4,"column":31}},{"generated":{"line":11,"column":42},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":44},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":4,"column":44}},{"generated":{"line":11,"column":50},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":51},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":7}},{"name":"createCtranspose","generated":{"line":12,"column":6},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":13}},{"generated":{"line":12,"column":22},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":29}},{"generated":{"line":13,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":32}},{"generated":{"line":14,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":48}},{"name":"name","generated":{"line":14,"column":22},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":56}},{"generated":{"line":14,"column":26},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":48}},{"name":"dependencies","generated":{"line":14,"column":28},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":62}},{"generated":{"line":14,"column":40},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":48}},{"generated":{"line":14,"column":42},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":76}},{"generated":{"line":14,"column":43},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":77}},{"name":"typed","generated":{"line":15,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":79}},{"name":"typed","generated":{"line":15,"column":2},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":79}},{"generated":{"line":15,"column":7},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":77}},{"name":"transpose","generated":{"line":16,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":86}},{"name":"transpose","generated":{"line":16,"column":2},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":86}},{"generated":{"line":16,"column":11},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":77}},{"name":"conj","generated":{"line":17,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":97}},{"name":"conj","generated":{"line":17,"column":2},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":97}},{"generated":{"line":18,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":77}},{"generated":{"line":18,"column":1},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":76}},{"generated":{"line":18,"column":6},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":108}},{"generated":{"line":19,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":7,"column":2}},{"generated":{"line":41,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":29,"column":2}},{"name":"typed","generated":{"line":41,"column":9},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":29,"column":9}},{"generated":{"line":41,"column":14},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":29,"column":14}},{"name":"name","generated":{"line":41,"column":15},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":29,"column":15}},{"generated":{"line":41,"column":19},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":29,"column":14}},{"generated":{"line":41,"column":21},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":29,"column":21}},{"generated":{"line":42,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":30,"column":4}},{"generated":{"line":42,"column":11},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":30,"column":11}},{"name":"x","generated":{"line":42,"column":21},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":30,"column":21}},{"generated":{"line":42,"column":22},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":30,"column":11}},{"generated":{"line":42,"column":24},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":30,"column":24}},{"generated":{"line":43,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":31,"column":6}},{"name":"conj","generated":{"line":43,"column":13},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":31,"column":13}},{"generated":{"line":43,"column":17},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":31,"column":17}},{"name":"transpose","generated":{"line":43,"column":18},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":31,"column":18}},{"generated":{"line":43,"column":27},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":31,"column":27}},{"name":"x","generated":{"line":43,"column":28},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":31,"column":28}},{"generated":{"line":43,"column":29},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":31,"column":27}},{"generated":{"line":43,"column":30},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":31,"column":17}},{"generated":{"line":43,"column":31},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":31,"column":6}},{"generated":{"line":44,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":32,"column":5}},{"generated":{"line":45,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":29,"column":21}},{"generated":{"line":45,"column":3},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":29,"column":14}},{"generated":{"line":45,"column":4},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":29,"column":2}},{"generated":{"line":46,"column":0},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":34,"column":1}},{"generated":{"line":46,"column":1},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":48}},{"generated":{"line":46,"column":2},"source":"../node_modules/mathjs/src/function/matrix/ctranspose.js","original":{"line":6,"column":7}}],"sources":{"../node_modules/mathjs/src/function/matrix/ctranspose.js":"import { factory } from '../../utils/factory'\n\nconst name = 'ctranspose'\nconst dependencies = ['typed', 'transpose', 'conj']\n\nexport const createCtranspose = /* #__PURE__ */ factory(name, dependencies, ({ typed, transpose, conj }) => {\n  /**\n   * Transpose and complex conjugate a matrix. All values of the matrix are\n   * reflected over its main diagonal and then the complex conjugate is\n   * taken. This is equivalent to complex conjugation for scalars and\n   * vectors.\n   *\n   * Syntax:\n   *\n   *     math.ctranspose(x)\n   *\n   * Examples:\n   *\n   *     const A = [[1, 2, 3], [4, 5, math.complex(6,7)]]\n   *     math.ctranspose(A)               // returns [[1, 4], [2, 5], [3, {re:6,im:7}]]\n   *\n   * See also:\n   *\n   *     transpose, diag, inv, subset, squeeze\n   *\n   * @param {Array | Matrix} x  Matrix to be ctransposed\n   * @return {Array | Matrix}   The ctransposed matrix\n   */\n  return typed(name, {\n    'any': function (x) {\n      return conj(transpose(x))\n    }\n  })\n})\n"},"lineCount":null}},"error":null,"hash":"434e42968fab83025e27d6d022653272","cacheData":{"env":{}}}