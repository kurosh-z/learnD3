{"id":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","dependencies":[{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/package.json","includedInParent":true,"mtime":1560273194535},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/src/.babelrc","includedInParent":true,"mtime":1559848325497},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/package.json","includedInParent":true,"mtime":1560201061975}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bitOrDocs = void 0;\nconst bitOrDocs = {\n  'name': 'bitOr',\n  'category': 'Bitwise',\n  'syntax': ['x | y', 'bitOr(x, y)'],\n  'description': 'Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.',\n  'examples': ['5 | 3', 'bitOr([1, 2, 3], 4)'],\n  'seealso': ['bitAnd', 'bitNot', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift']\n};\nexports.bitOrDocs = bitOrDocs;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7}},{"name":"bitOrDocs","generated":{"line":7,"column":6},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":13}},{"generated":{"line":7,"column":15},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":22}},{"generated":{"line":7,"column":18},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":25}},{"generated":{"line":8,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":2,"column":2}},{"generated":{"line":8,"column":10},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":2,"column":10}},{"generated":{"line":8,"column":17},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":25}},{"generated":{"line":9,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":3,"column":2}},{"generated":{"line":9,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":3,"column":14}},{"generated":{"line":9,"column":23},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":25}},{"generated":{"line":10,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":2}},{"generated":{"line":10,"column":12},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":13},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":5,"column":4}},{"generated":{"line":10,"column":20},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":22},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":4}},{"generated":{"line":10,"column":35},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":36},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":25}},{"generated":{"line":11,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":8,"column":2}},{"generated":{"line":11,"column":17},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":8,"column":17}},{"generated":{"line":11,"column":270},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":25}},{"generated":{"line":12,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":9,"column":2}},{"generated":{"line":12,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":9,"column":14}},{"generated":{"line":12,"column":15},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":10,"column":4}},{"generated":{"line":12,"column":22},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":9,"column":14}},{"generated":{"line":12,"column":24},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":11,"column":4}},{"generated":{"line":12,"column":45},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":9,"column":14}},{"generated":{"line":12,"column":46},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":25}},{"generated":{"line":13,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":13,"column":2}},{"generated":{"line":13,"column":13},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":13,"column":13}},{"generated":{"line":13,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":14,"column":4}},{"generated":{"line":13,"column":22},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":13,"column":13}},{"generated":{"line":13,"column":24},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":14,"column":14}},{"generated":{"line":13,"column":32},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":13,"column":13}},{"generated":{"line":13,"column":34},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":14,"column":24}},{"generated":{"line":13,"column":42},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":13,"column":13}},{"generated":{"line":13,"column":44},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":14,"column":34}},{"generated":{"line":13,"column":55},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":13,"column":13}},{"generated":{"line":13,"column":57},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":14,"column":47}},{"generated":{"line":13,"column":74},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":13,"column":13}},{"generated":{"line":13,"column":76},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":14,"column":66}},{"generated":{"line":13,"column":91},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":13,"column":13}},{"generated":{"line":14,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":25}},{"generated":{"line":14,"column":1},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7}}],"sources":{"../node_modules/mathjs/src/expression/embeddedDocs/function/bitwise/bitOr.js":"export const bitOrDocs = {\n  'name': 'bitOr',\n  'category': 'Bitwise',\n  'syntax': [\n    'x | y',\n    'bitOr(x, y)'\n  ],\n  'description': 'Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.',\n  'examples': [\n    '5 | 3',\n    'bitOr([1, 2, 3], 4)'\n  ],\n  'seealso': [\n    'bitAnd', 'bitNot', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift'\n  ]\n}\n"},"lineCount":null}},"error":null,"hash":"42b93f7dec4935f85f427ca49d113517","cacheData":{"env":{}}}