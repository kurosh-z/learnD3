{"id":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","dependencies":[{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/package.json","includedInParent":true,"mtime":1560273194535},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/src/.babelrc","includedInParent":true,"mtime":1559848325497},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/package.json","includedInParent":true,"mtime":1560201061975}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.quantileSeqDocs = void 0;\nconst quantileSeqDocs = {\n  'name': 'quantileSeq',\n  'category': 'Statistics',\n  'syntax': ['quantileSeq(A, prob[, sorted])', 'quantileSeq(A, [prob1, prob2, ...][, sorted])', 'quantileSeq(A, N[, sorted])'],\n  'description': 'Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \\n\\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.',\n  'examples': ['quantileSeq([3, -1, 5, 7], 0.5)', 'quantileSeq([3, -1, 5, 7], [1/3, 2/3])', 'quantileSeq([3, -1, 5, 7], 2)', 'quantileSeq([-1, 3, 5, 7], 0.5, true)'],\n  'seealso': ['mean', 'median', 'min', 'max', 'prod', 'std', 'sum', 'variance']\n};\nexports.quantileSeqDocs = quantileSeqDocs;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7}},{"name":"quantileSeqDocs","generated":{"line":7,"column":6},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":13}},{"generated":{"line":7,"column":21},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":28}},{"generated":{"line":7,"column":24},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":31}},{"generated":{"line":8,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":2,"column":2}},{"generated":{"line":8,"column":10},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":2,"column":10}},{"generated":{"line":8,"column":23},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":31}},{"generated":{"line":9,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":3,"column":2}},{"generated":{"line":9,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":3,"column":14}},{"generated":{"line":9,"column":26},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":31}},{"generated":{"line":10,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":4,"column":2}},{"generated":{"line":10,"column":12},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":13},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":5,"column":4}},{"generated":{"line":10,"column":45},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":47},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":6,"column":4}},{"generated":{"line":10,"column":94},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":96},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":7,"column":4}},{"generated":{"line":10,"column":125},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":126},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":31}},{"generated":{"line":11,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":9,"column":2}},{"generated":{"line":11,"column":17},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":9,"column":17}},{"generated":{"line":11,"column":374},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":31}},{"generated":{"line":12,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":10,"column":2}},{"generated":{"line":12,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":10,"column":14}},{"generated":{"line":12,"column":15},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":11,"column":4}},{"generated":{"line":12,"column":48},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":10,"column":14}},{"generated":{"line":12,"column":50},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":12,"column":4}},{"generated":{"line":12,"column":90},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":10,"column":14}},{"generated":{"line":12,"column":92},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":13,"column":4}},{"generated":{"line":12,"column":123},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":10,"column":14}},{"generated":{"line":12,"column":125},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":14,"column":4}},{"generated":{"line":12,"column":164},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":10,"column":14}},{"generated":{"line":12,"column":165},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":31}},{"generated":{"line":13,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":16,"column":2}},{"generated":{"line":13,"column":13},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":16,"column":13}},{"generated":{"line":13,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":17,"column":4}},{"generated":{"line":13,"column":20},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":16,"column":13}},{"generated":{"line":13,"column":22},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":18,"column":4}},{"generated":{"line":13,"column":30},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":16,"column":13}},{"generated":{"line":13,"column":32},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":19,"column":4}},{"generated":{"line":13,"column":37},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":16,"column":13}},{"generated":{"line":13,"column":39},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":20,"column":4}},{"generated":{"line":13,"column":44},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":16,"column":13}},{"generated":{"line":13,"column":46},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":21,"column":4}},{"generated":{"line":13,"column":52},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":16,"column":13}},{"generated":{"line":13,"column":54},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":22,"column":4}},{"generated":{"line":13,"column":59},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":16,"column":13}},{"generated":{"line":13,"column":61},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":23,"column":4}},{"generated":{"line":13,"column":66},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":16,"column":13}},{"generated":{"line":13,"column":68},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":24,"column":4}},{"generated":{"line":13,"column":78},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":16,"column":13}},{"generated":{"line":14,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":31}},{"generated":{"line":14,"column":1},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js","original":{"line":1,"column":7}}],"sources":{"../node_modules/mathjs/src/expression/embeddedDocs/function/statistics/quantileSeq.js":"export const quantileSeqDocs = {\n  'name': 'quantileSeq',\n  'category': 'Statistics',\n  'syntax': [\n    'quantileSeq(A, prob[, sorted])',\n    'quantileSeq(A, [prob1, prob2, ...][, sorted])',\n    'quantileSeq(A, N[, sorted])'\n  ],\n  'description': 'Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \\n\\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.',\n  'examples': [\n    'quantileSeq([3, -1, 5, 7], 0.5)',\n    'quantileSeq([3, -1, 5, 7], [1/3, 2/3])',\n    'quantileSeq([3, -1, 5, 7], 2)',\n    'quantileSeq([-1, 3, 5, 7], 0.5, true)'\n  ],\n  'seealso': [\n    'mean',\n    'median',\n    'min',\n    'max',\n    'prod',\n    'std',\n    'sum',\n    'variance'\n  ]\n}\n"},"lineCount":null}},"error":null,"hash":"b0ab133465fb1f4591d59effe3f88c7e","cacheData":{"env":{}}}