{"id":"../node_modules/mathjs/src/json/reviver.js","dependencies":[{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/package.json","includedInParent":true,"mtime":1560273194535},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/src/.babelrc","includedInParent":true,"mtime":1559848325497},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/package.json","includedInParent":true,"mtime":1560201061975},{"name":"../utils/factory","loc":{"line":1,"column":24},"parent":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/src/json/reviver.js","resolved":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/src/utils/factory.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createReviver = void 0;\n\nvar _factory = require(\"../utils/factory\");\n\nconst name = 'reviver';\nconst dependencies = ['classes'];\nconst createReviver =\n/* #__PURE__ */\n(0, _factory.factory)(name, dependencies, ({\n  classes\n}) => {\n  /**\n   * Instantiate mathjs data types from their JSON representation\n   * @param {string} key\n   * @param {*} value\n   * @returns {*} Returns the revived object\n   */\n  return function reviver(key, value) {\n    const constructor = classes[value && value.mathjs];\n\n    if (constructor && typeof constructor.fromJSON === 'function') {\n      return constructor.fromJSON(value);\n    }\n\n    return value;\n  };\n});\nexports.createReviver = createReviver;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":3,"column":0}},{"name":"name","generated":{"line":10,"column":6},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":3,"column":6}},{"generated":{"line":10,"column":10},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":3,"column":10}},{"generated":{"line":10,"column":13},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":3,"column":13}},{"generated":{"line":10,"column":22},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":4,"column":0}},{"name":"dependencies","generated":{"line":11,"column":6},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":4,"column":6}},{"generated":{"line":11,"column":18},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":4,"column":18}},{"generated":{"line":11,"column":21},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":22},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":5,"column":2}},{"generated":{"line":11,"column":31},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":32},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":7}},{"name":"createReviver","generated":{"line":12,"column":6},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":13}},{"generated":{"line":12,"column":19},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":26}},{"generated":{"line":13,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":29}},{"generated":{"line":14,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":45}},{"name":"name","generated":{"line":14,"column":22},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":53}},{"generated":{"line":14,"column":26},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":45}},{"name":"dependencies","generated":{"line":14,"column":28},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":59}},{"generated":{"line":14,"column":40},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":45}},{"generated":{"line":14,"column":42},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":73}},{"generated":{"line":14,"column":43},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":74}},{"name":"classes","generated":{"line":15,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":76}},{"name":"classes","generated":{"line":15,"column":2},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":76}},{"generated":{"line":16,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":74}},{"generated":{"line":16,"column":1},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":73}},{"generated":{"line":16,"column":6},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":90}},{"generated":{"line":17,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":9,"column":2}},{"generated":{"line":23,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":15,"column":2}},{"generated":{"line":23,"column":9},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":15,"column":9}},{"name":"reviver","generated":{"line":23,"column":18},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":15,"column":18}},{"generated":{"line":23,"column":25},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":15,"column":9}},{"name":"key","generated":{"line":23,"column":26},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":15,"column":27}},{"generated":{"line":23,"column":29},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":15,"column":9}},{"name":"value","generated":{"line":23,"column":31},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":15,"column":32}},{"generated":{"line":23,"column":36},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":15,"column":9}},{"generated":{"line":23,"column":38},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":15,"column":39}},{"generated":{"line":24,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":4}},{"name":"constructor","generated":{"line":24,"column":10},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":10}},{"generated":{"line":24,"column":21},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":21}},{"name":"classes","generated":{"line":24,"column":24},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":24}},{"generated":{"line":24,"column":31},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":31}},{"name":"value","generated":{"line":24,"column":32},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":32}},{"generated":{"line":24,"column":37},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":37}},{"name":"value","generated":{"line":24,"column":41},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":41}},{"generated":{"line":24,"column":46},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":46}},{"name":"mathjs","generated":{"line":24,"column":47},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":47}},{"generated":{"line":24,"column":53},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":31}},{"generated":{"line":24,"column":54},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":16,"column":4}},{"generated":{"line":26,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":18,"column":4}},{"name":"constructor","generated":{"line":26,"column":8},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":18,"column":8}},{"generated":{"line":26,"column":19},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":18,"column":19}},{"generated":{"line":26,"column":23},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":18,"column":23}},{"name":"constructor","generated":{"line":26,"column":30},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":18,"column":30}},{"generated":{"line":26,"column":41},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":18,"column":41}},{"name":"fromJSON","generated":{"line":26,"column":42},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":18,"column":42}},{"generated":{"line":26,"column":50},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":18,"column":23}},{"generated":{"line":26,"column":55},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":18,"column":55}},{"generated":{"line":26,"column":65},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":18,"column":4}},{"generated":{"line":26,"column":67},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":18,"column":67}},{"generated":{"line":27,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":19,"column":6}},{"name":"constructor","generated":{"line":27,"column":13},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":19,"column":13}},{"generated":{"line":27,"column":24},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":19,"column":24}},{"name":"fromJSON","generated":{"line":27,"column":25},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":19,"column":25}},{"generated":{"line":27,"column":33},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":19,"column":13}},{"name":"value","generated":{"line":27,"column":34},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":19,"column":34}},{"generated":{"line":27,"column":39},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":19,"column":13}},{"generated":{"line":27,"column":40},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":19,"column":6}},{"generated":{"line":28,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":20,"column":5}},{"generated":{"line":30,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":22,"column":4}},{"name":"value","generated":{"line":30,"column":11},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":22,"column":11}},{"generated":{"line":30,"column":16},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":22,"column":4}},{"generated":{"line":31,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":23,"column":3}},{"generated":{"line":31,"column":3},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":15,"column":2}},{"generated":{"line":32,"column":0},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":24,"column":1}},{"generated":{"line":32,"column":1},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":45}},{"generated":{"line":32,"column":2},"source":"../node_modules/mathjs/src/json/reviver.js","original":{"line":8,"column":7}}],"sources":{"../node_modules/mathjs/src/json/reviver.js":"import { factory } from '../utils/factory'\n\nconst name = 'reviver'\nconst dependencies = [\n  'classes'\n]\n\nexport const createReviver = /* #__PURE__ */ factory(name, dependencies, ({ classes }) => {\n  /**\n   * Instantiate mathjs data types from their JSON representation\n   * @param {string} key\n   * @param {*} value\n   * @returns {*} Returns the revived object\n   */\n  return function reviver (key, value) {\n    const constructor = classes[value && value.mathjs]\n\n    if (constructor && typeof constructor.fromJSON === 'function') {\n      return constructor.fromJSON(value)\n    }\n\n    return value\n  }\n})\n"},"lineCount":null}},"error":null,"hash":"b16b5daf536becf557521211e2cf176f","cacheData":{"env":{}}}