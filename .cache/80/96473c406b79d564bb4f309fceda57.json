{"id":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","dependencies":[{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/package.json","includedInParent":true,"mtime":1560273194535},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/src/.babelrc","includedInParent":true,"mtime":1559848325497},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/package.json","includedInParent":true,"mtime":1560201061975}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMatrixDataTypeDocs = void 0;\nconst getMatrixDataTypeDocs = {\n  'name': 'getMatrixDataType',\n  'category': 'Matrix',\n  'syntax': ['getMatrixDataType(x)'],\n  'description': 'Find the data type of all elements in a matrix or array, ' + 'for example \"number\" if all items are a number ' + 'and \"Complex\" if all values are complex numbers. ' + 'If a matrix contains more than one data type, it will return \"mixed\".',\n  'examples': ['getMatrixDataType([1, 2, 3])', 'getMatrixDataType([[5 cm], [2 inch]])', 'getMatrixDataType([1, \"text\"])', 'getMatrixDataType([1, bignumber(4)])'],\n  'seealso': ['matrix', 'sparse', 'typeOf']\n};\nexports.getMatrixDataTypeDocs = getMatrixDataTypeDocs;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":1,"column":7}},{"name":"getMatrixDataTypeDocs","generated":{"line":7,"column":6},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":1,"column":13}},{"generated":{"line":7,"column":27},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":1,"column":34}},{"generated":{"line":7,"column":30},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":1,"column":37}},{"generated":{"line":8,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":2,"column":2}},{"generated":{"line":8,"column":10},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":2,"column":10}},{"generated":{"line":8,"column":29},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":1,"column":37}},{"generated":{"line":9,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":3,"column":2}},{"generated":{"line":9,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":3,"column":14}},{"generated":{"line":9,"column":22},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":1,"column":37}},{"generated":{"line":10,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":4,"column":2}},{"generated":{"line":10,"column":12},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":13},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":5,"column":4}},{"generated":{"line":10,"column":35},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":36},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":1,"column":37}},{"generated":{"line":11,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":7,"column":2}},{"generated":{"line":11,"column":17},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":7,"column":17}},{"generated":{"line":11,"column":79},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":8,"column":2}},{"generated":{"line":11,"column":128},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":7,"column":17}},{"generated":{"line":11,"column":131},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":9,"column":2}},{"generated":{"line":11,"column":182},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":7,"column":17}},{"generated":{"line":11,"column":185},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":10,"column":2}},{"generated":{"line":11,"column":256},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":1,"column":37}},{"generated":{"line":12,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":11,"column":2}},{"generated":{"line":12,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":11,"column":14}},{"generated":{"line":12,"column":15},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":12,"column":4}},{"generated":{"line":12,"column":45},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":11,"column":14}},{"generated":{"line":12,"column":47},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":13,"column":4}},{"generated":{"line":12,"column":86},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":11,"column":14}},{"generated":{"line":12,"column":88},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":14,"column":4}},{"generated":{"line":12,"column":120},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":11,"column":14}},{"generated":{"line":12,"column":122},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":15,"column":4}},{"generated":{"line":12,"column":160},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":11,"column":14}},{"generated":{"line":12,"column":161},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":1,"column":37}},{"generated":{"line":13,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":17,"column":2}},{"generated":{"line":13,"column":13},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":17,"column":13}},{"generated":{"line":13,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":17,"column":14}},{"generated":{"line":13,"column":22},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":17,"column":13}},{"generated":{"line":13,"column":24},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":17,"column":24}},{"generated":{"line":13,"column":32},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":17,"column":13}},{"generated":{"line":13,"column":34},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":17,"column":34}},{"generated":{"line":13,"column":42},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":17,"column":13}},{"generated":{"line":14,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":1,"column":37}},{"generated":{"line":14,"column":1},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js","original":{"line":1,"column":7}}],"sources":{"../node_modules/mathjs/src/expression/embeddedDocs/function/matrix/getMatrixDataType.js":"export const getMatrixDataTypeDocs = {\n  'name': 'getMatrixDataType',\n  'category': 'Matrix',\n  'syntax': [\n    'getMatrixDataType(x)'\n  ],\n  'description': 'Find the data type of all elements in a matrix or array, ' +\n  'for example \"number\" if all items are a number ' +\n  'and \"Complex\" if all values are complex numbers. ' +\n  'If a matrix contains more than one data type, it will return \"mixed\".',\n  'examples': [\n    'getMatrixDataType([1, 2, 3])',\n    'getMatrixDataType([[5 cm], [2 inch]])',\n    'getMatrixDataType([1, \"text\"])',\n    'getMatrixDataType([1, bignumber(4)])'\n  ],\n  'seealso': ['matrix', 'sparse', 'typeOf']\n}\n"},"lineCount":null}},"error":null,"hash":"d3b2204495725bef9be7d9cab5364dce","cacheData":{"env":{}}}