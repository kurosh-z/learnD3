{"id":"../node_modules/mathjs/src/function/combinatorics/composition.js","dependencies":[{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/package.json","includedInParent":true,"mtime":1560273194535},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/src/.babelrc","includedInParent":true,"mtime":1559848325497},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/package.json","includedInParent":true,"mtime":1560201061975},{"name":"../../utils/factory","loc":{"line":1,"column":24},"parent":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/src/function/combinatorics/composition.js","resolved":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/src/utils/factory.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createComposition = void 0;\n\nvar _factory = require(\"../../utils/factory\");\n\nconst name = 'composition';\nconst dependencies = ['typed', 'addScalar', 'combinations', 'isNegative', 'isPositive', 'isInteger', 'larger'];\nconst createComposition =\n/* #__PURE__ */\n(0, _factory.factory)(name, dependencies, ({\n  typed,\n  addScalar,\n  combinations,\n  isPositive,\n  isNegative,\n  isInteger,\n  larger\n}) => {\n  /**\n   * The composition counts of n into k parts.\n   *\n   * composition only takes integer arguments.\n   * The following condition must be enforced: k <= n.\n   *\n   * Syntax:\n   *\n   *   math.composition(n, k)\n   *\n   * Examples:\n   *\n   *    math.composition(5, 3) // returns 6\n   *\n   * See also:\n   *\n   *    combinations\n   *\n   * @param {Number | BigNumber} n    Total number of objects in the set\n   * @param {Number | BigNumber} k    Number of objects in the subset\n   * @return {Number | BigNumber}     Returns the composition counts of n into k parts.\n   */\n  return typed(name, {\n    'number | BigNumber, number | BigNumber': function (n, k) {\n      if (!isInteger(n) || !isPositive(n) || !isInteger(k) || !isPositive(k)) {\n        throw new TypeError('Positive integer value expected in function composition');\n      } else if (larger(k, n)) {\n        throw new TypeError('k must be less than or equal to n in function composition');\n      }\n\n      return combinations(addScalar(n, -1), addScalar(k, -1));\n    }\n  });\n});\nexports.createComposition = createComposition;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":3,"column":0}},{"name":"name","generated":{"line":10,"column":6},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":3,"column":6}},{"generated":{"line":10,"column":10},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":3,"column":10}},{"generated":{"line":10,"column":13},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":3,"column":13}},{"generated":{"line":10,"column":26},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":0}},{"name":"dependencies","generated":{"line":11,"column":6},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":6}},{"generated":{"line":11,"column":18},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":18}},{"generated":{"line":11,"column":21},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":22},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":5,"column":2}},{"generated":{"line":11,"column":29},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":31},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":6,"column":2}},{"generated":{"line":11,"column":42},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":44},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":7,"column":2}},{"generated":{"line":11,"column":58},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":60},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":8,"column":2}},{"generated":{"line":11,"column":72},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":74},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":9,"column":2}},{"generated":{"line":11,"column":86},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":88},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":10,"column":2}},{"generated":{"line":11,"column":99},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":101},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":11,"column":2}},{"generated":{"line":11,"column":109},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":110},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":7}},{"name":"createComposition","generated":{"line":12,"column":6},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":13}},{"generated":{"line":12,"column":23},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":30}},{"generated":{"line":13,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":33}},{"generated":{"line":14,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":49}},{"name":"name","generated":{"line":14,"column":22},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":57}},{"generated":{"line":14,"column":26},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":49}},{"name":"dependencies","generated":{"line":14,"column":28},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":63}},{"generated":{"line":14,"column":40},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":49}},{"generated":{"line":14,"column":42},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":77}},{"generated":{"line":14,"column":43},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":15,"column":2}},{"name":"typed","generated":{"line":15,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":16,"column":4}},{"name":"typed","generated":{"line":15,"column":2},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":16,"column":4}},{"generated":{"line":15,"column":7},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":15,"column":2}},{"name":"addScalar","generated":{"line":16,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":17,"column":4}},{"name":"addScalar","generated":{"line":16,"column":2},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":17,"column":4}},{"generated":{"line":16,"column":11},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":15,"column":2}},{"name":"combinations","generated":{"line":17,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":18,"column":4}},{"name":"combinations","generated":{"line":17,"column":2},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":18,"column":4}},{"generated":{"line":17,"column":14},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":15,"column":2}},{"name":"isPositive","generated":{"line":18,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":19,"column":4}},{"name":"isPositive","generated":{"line":18,"column":2},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":19,"column":4}},{"generated":{"line":18,"column":12},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":15,"column":2}},{"name":"isNegative","generated":{"line":19,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":20,"column":4}},{"name":"isNegative","generated":{"line":19,"column":2},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":20,"column":4}},{"generated":{"line":19,"column":12},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":15,"column":2}},{"name":"isInteger","generated":{"line":20,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":21,"column":4}},{"name":"isInteger","generated":{"line":20,"column":2},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":21,"column":4}},{"generated":{"line":20,"column":11},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":15,"column":2}},{"name":"larger","generated":{"line":21,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":22,"column":4}},{"name":"larger","generated":{"line":21,"column":2},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":22,"column":4}},{"generated":{"line":22,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":15,"column":2}},{"generated":{"line":22,"column":1},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":77}},{"generated":{"line":22,"column":6},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":24,"column":5}},{"generated":{"line":23,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":25,"column":2}},{"generated":{"line":45,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":47,"column":2}},{"name":"typed","generated":{"line":45,"column":9},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":47,"column":9}},{"generated":{"line":45,"column":14},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":47,"column":14}},{"name":"name","generated":{"line":45,"column":15},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":47,"column":15}},{"generated":{"line":45,"column":19},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":47,"column":14}},{"generated":{"line":45,"column":21},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":47,"column":21}},{"generated":{"line":46,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":48,"column":4}},{"generated":{"line":46,"column":46},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":48,"column":46}},{"name":"n","generated":{"line":46,"column":56},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":48,"column":56}},{"generated":{"line":46,"column":57},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":48,"column":46}},{"name":"k","generated":{"line":46,"column":59},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":48,"column":59}},{"generated":{"line":46,"column":60},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":48,"column":46}},{"generated":{"line":46,"column":62},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":48,"column":62}},{"generated":{"line":47,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":6}},{"generated":{"line":47,"column":10},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":10}},{"name":"isInteger","generated":{"line":47,"column":11},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":11}},{"generated":{"line":47,"column":20},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":20}},{"name":"n","generated":{"line":47,"column":21},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":21}},{"generated":{"line":47,"column":22},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":20}},{"generated":{"line":47,"column":23},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":10}},{"generated":{"line":47,"column":27},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":27}},{"name":"isPositive","generated":{"line":47,"column":28},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":28}},{"generated":{"line":47,"column":38},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":38}},{"name":"n","generated":{"line":47,"column":39},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":39}},{"generated":{"line":47,"column":40},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":38}},{"generated":{"line":47,"column":41},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":10}},{"generated":{"line":47,"column":45},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":45}},{"name":"isInteger","generated":{"line":47,"column":46},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":46}},{"generated":{"line":47,"column":55},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":55}},{"name":"k","generated":{"line":47,"column":56},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":56}},{"generated":{"line":47,"column":57},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":55}},{"generated":{"line":47,"column":58},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":10}},{"generated":{"line":47,"column":62},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":62}},{"name":"isPositive","generated":{"line":47,"column":63},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":63}},{"generated":{"line":47,"column":73},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":73}},{"name":"k","generated":{"line":47,"column":74},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":74}},{"generated":{"line":47,"column":75},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":73}},{"generated":{"line":47,"column":76},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":6}},{"generated":{"line":47,"column":78},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":78}},{"generated":{"line":48,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":50,"column":8}},{"generated":{"line":48,"column":14},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":50,"column":14}},{"name":"TypeError","generated":{"line":48,"column":18},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":50,"column":18}},{"generated":{"line":48,"column":27},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":50,"column":14}},{"generated":{"line":48,"column":28},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":50,"column":28}},{"generated":{"line":48,"column":85},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":50,"column":14}},{"generated":{"line":48,"column":86},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":50,"column":8}},{"generated":{"line":49,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":51,"column":7}},{"generated":{"line":49,"column":7},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":49,"column":6}},{"generated":{"line":49,"column":13},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":51,"column":13}},{"name":"larger","generated":{"line":49,"column":17},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":51,"column":17}},{"generated":{"line":49,"column":23},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":51,"column":23}},{"name":"k","generated":{"line":49,"column":24},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":51,"column":24}},{"generated":{"line":49,"column":25},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":51,"column":23}},{"name":"n","generated":{"line":49,"column":27},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":51,"column":27}},{"generated":{"line":49,"column":28},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":51,"column":23}},{"generated":{"line":49,"column":29},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":51,"column":13}},{"generated":{"line":49,"column":31},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":51,"column":31}},{"generated":{"line":50,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":52,"column":8}},{"generated":{"line":50,"column":14},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":52,"column":14}},{"name":"TypeError","generated":{"line":50,"column":18},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":52,"column":18}},{"generated":{"line":50,"column":27},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":52,"column":14}},{"generated":{"line":50,"column":28},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":52,"column":28}},{"generated":{"line":50,"column":87},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":52,"column":14}},{"generated":{"line":50,"column":88},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":52,"column":8}},{"generated":{"line":51,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":53,"column":7}},{"generated":{"line":53,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":6}},{"name":"combinations","generated":{"line":53,"column":13},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":13}},{"generated":{"line":53,"column":25},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":25}},{"name":"addScalar","generated":{"line":53,"column":26},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":26}},{"generated":{"line":53,"column":35},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":35}},{"name":"n","generated":{"line":53,"column":36},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":36}},{"generated":{"line":53,"column":37},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":35}},{"generated":{"line":53,"column":39},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":39}},{"generated":{"line":53,"column":40},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":40}},{"generated":{"line":53,"column":41},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":35}},{"generated":{"line":53,"column":42},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":25}},{"name":"addScalar","generated":{"line":53,"column":44},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":44}},{"generated":{"line":53,"column":53},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":53}},{"name":"k","generated":{"line":53,"column":54},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":54}},{"generated":{"line":53,"column":55},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":53}},{"generated":{"line":53,"column":57},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":57}},{"generated":{"line":53,"column":58},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":58}},{"generated":{"line":53,"column":59},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":53}},{"generated":{"line":53,"column":60},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":25}},{"generated":{"line":53,"column":61},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":55,"column":6}},{"generated":{"line":54,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":56,"column":5}},{"generated":{"line":55,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":47,"column":21}},{"generated":{"line":55,"column":3},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":47,"column":14}},{"generated":{"line":55,"column":4},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":47,"column":2}},{"generated":{"line":56,"column":0},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":58,"column":1}},{"generated":{"line":56,"column":1},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":49}},{"generated":{"line":56,"column":2},"source":"../node_modules/mathjs/src/function/combinatorics/composition.js","original":{"line":14,"column":7}}],"sources":{"../node_modules/mathjs/src/function/combinatorics/composition.js":"import { factory } from '../../utils/factory'\n\nconst name = 'composition'\nconst dependencies = [\n  'typed',\n  'addScalar',\n  'combinations',\n  'isNegative',\n  'isPositive',\n  'isInteger',\n  'larger'\n]\n\nexport const createComposition = /* #__PURE__ */ factory(name, dependencies, (\n  {\n    typed,\n    addScalar,\n    combinations,\n    isPositive,\n    isNegative,\n    isInteger,\n    larger\n  }\n) => {\n  /**\n   * The composition counts of n into k parts.\n   *\n   * composition only takes integer arguments.\n   * The following condition must be enforced: k <= n.\n   *\n   * Syntax:\n   *\n   *   math.composition(n, k)\n   *\n   * Examples:\n   *\n   *    math.composition(5, 3) // returns 6\n   *\n   * See also:\n   *\n   *    combinations\n   *\n   * @param {Number | BigNumber} n    Total number of objects in the set\n   * @param {Number | BigNumber} k    Number of objects in the subset\n   * @return {Number | BigNumber}     Returns the composition counts of n into k parts.\n   */\n  return typed(name, {\n    'number | BigNumber, number | BigNumber': function (n, k) {\n      if (!isInteger(n) || !isPositive(n) || !isInteger(k) || !isPositive(k)) {\n        throw new TypeError('Positive integer value expected in function composition')\n      } else if (larger(k, n)) {\n        throw new TypeError('k must be less than or equal to n in function composition')\n      }\n\n      return combinations(addScalar(n, -1), addScalar(k, -1))\n    }\n  })\n})\n"},"lineCount":null}},"error":null,"hash":"b0dcf79224ef76d68c8ea7517a0c761d","cacheData":{"env":{}}}