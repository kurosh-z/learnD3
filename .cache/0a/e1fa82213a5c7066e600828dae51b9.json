{"id":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","dependencies":[{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/package.json","includedInParent":true,"mtime":1560273194535},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/src/.babelrc","includedInParent":true,"mtime":1559848325497},{"name":"/Users/kurosh/Documents/MyGithub/LearnD3/node_modules/mathjs/package.json","includedInParent":true,"mtime":1560201061975}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compositionDocs = void 0;\nconst compositionDocs = {\n  'name': 'composition',\n  'category': 'Combinatorics',\n  'syntax': ['composition(n, k)'],\n  'description': 'The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.',\n  'examples': ['composition(5, 3)'],\n  'seealso': ['combinations']\n};\nexports.compositionDocs = compositionDocs;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":7}},{"name":"compositionDocs","generated":{"line":7,"column":6},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":13}},{"generated":{"line":7,"column":21},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":28}},{"generated":{"line":7,"column":24},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":31}},{"generated":{"line":8,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":2,"column":2}},{"generated":{"line":8,"column":10},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":2,"column":10}},{"generated":{"line":8,"column":23},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":31}},{"generated":{"line":9,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":3,"column":2}},{"generated":{"line":9,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":3,"column":14}},{"generated":{"line":9,"column":29},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":31}},{"generated":{"line":10,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":4,"column":2}},{"generated":{"line":10,"column":12},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":13},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":5,"column":4}},{"generated":{"line":10,"column":32},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":33},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":31}},{"generated":{"line":11,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":7,"column":2}},{"generated":{"line":11,"column":17},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":7,"column":17}},{"generated":{"line":11,"column":152},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":31}},{"generated":{"line":12,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":8,"column":2}},{"generated":{"line":12,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":8,"column":14}},{"generated":{"line":12,"column":15},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":9,"column":4}},{"generated":{"line":12,"column":34},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":8,"column":14}},{"generated":{"line":12,"column":35},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":31}},{"generated":{"line":13,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":11,"column":2}},{"generated":{"line":13,"column":13},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":11,"column":13}},{"generated":{"line":13,"column":14},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":11,"column":14}},{"generated":{"line":13,"column":28},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":11,"column":13}},{"generated":{"line":14,"column":0},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":31}},{"generated":{"line":14,"column":1},"source":"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":7}}],"sources":{"../node_modules/mathjs/src/expression/embeddedDocs/function/combinatorics/composition.js":"export const compositionDocs = {\n  'name': 'composition',\n  'category': 'Combinatorics',\n  'syntax': [\n    'composition(n, k)'\n  ],\n  'description': 'The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.',\n  'examples': [\n    'composition(5, 3)'\n  ],\n  'seealso': ['combinations']\n}\n"},"lineCount":null}},"error":null,"hash":"b4c32f3513a6d11ad41a17d468a5a6b3","cacheData":{"env":{}}}